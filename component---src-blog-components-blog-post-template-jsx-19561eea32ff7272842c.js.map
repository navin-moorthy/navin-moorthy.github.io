{"version":3,"sources":["webpack:///./src/blog-components/BlogFooter.jsx","webpack:///./src/blog-components/BlogPostTemplate.jsx","webpack:///./src/components/SEO.jsx","webpack:///./config/website.js","webpack:///./src/images/avatar.jpg","webpack:///./src/blog-components/BlogNavbar.jsx","webpack:///./static/logo.png","webpack:///./src/blog-components/BlogBio.jsx"],"names":["Footer","tw","footer","withConfig","displayName","componentId","textAlign","fontSize","@media (min-width: 768px)","BlogFooter","react_default","a","createElement","Date","getFullYear","href","__webpack_require__","d","__webpack_exports__","pageQuery","PostMainStyle","div","marginLeft","color","marginRight","maxWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","PostHeader","styled","h3","PostNavigation","ul","display","flexWrap","justifyContent","padding","listStyleType","BlogPostTemplate","_ref","data","pageContext","post","markdownRemark","previous","next","Fragment","SEO","siteTitle","frontmatter","title","BlogNavbar","style","date","dangerouslySetInnerHTML","__html","html","BlogBio","gatsby_browser_entry","to","fields","slug","rel","blog_components_BlogFooter","propTypes","PropTypes","object","isRequired","_public_static_d_1385866240_json__WEBPACK_IMPORTED_MODULE_0__","description","config","siteDescription","realPrefix","pathPrefix","homeURL","siteUrl","image","siteLogo","schemaOrgWebPage","@context","@type","url","headline","siteHeadline","inLanguage","mainEntityOfPage","name","author","copyrightHolder","copyrightYear","creator","publisher","datePublished","dateModified","site","buildTime","breadcrumb","itemListElement","item","@id","position","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","lang","siteLanguage","type","sizes","content","backgroundColor","property","ogLanguage","ogSiteName","siteFBAppID","userTwitter","JSON","stringify","string","module","exports","siteTitleAlt","siteTitleShort","googleAnalyticsID","themeColor","p","Navbar","flexDirection","alignItems","marginBottom","NavbarHeading","h1","NavbarLogo","img","width","margin","gatsby__WEBPACK_IMPORTED_MODULE_2__","borderBottom","src","logo","alt","BioContainer","Avatar","borderRadius","height","boxShadow","marginTop","BioText","@media (min-width: 640px)","Text","_data$site$siteMetada","_public_static_d_4227900542_json__WEBPACK_IMPORTED_MODULE_1__","siteMetadata","social","react__WEBPACK_IMPORTED_MODULE_2___default","avatar","twitter"],"mappings":"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","file":"component---src-blog-components-blog-post-template-jsx-19561eea32ff7272842c.js","sourcesContent":["import React from \"react\";\r\nimport tw from \"tailwind.macro\";\r\n\r\nconst Footer = tw.footer`text-center text-xs md:text-sm`;\r\n\r\nconst BlogFooter = () => (\r\n  <Footer>\r\n    Â© {new Date().getFullYear()}, Built with\r\n    {` `}\r\n    <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n  </Footer>\r\n);\r\n\r\nexport default BlogFooter;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, graphql } from \"gatsby\";\nimport styled from \"styled-components\";\nimport tw from \"tailwind.macro\";\n\n// Components\nimport SEO from \"../components/SEO\";\nimport BlogFooter from \"./BlogFooter\";\nimport BlogNavbar from \"./BlogNavbar\";\nimport BlogBio from \"./BlogBio\";\n\nconst PostMainStyle = tw.div`font-sans ml-auto text-sm text-gray-200 md:text-base mr-auto max-w-2xl px-5 py-10 `;\n\nconst PostHeader = styled.h3`\n  ${tw`text-2xl md:text-3xl`}\n`;\n\nconst PostNavigation = tw.ul`flex flex-wrap justify-between p-0 list-none`;\n\nconst BlogPostTemplate = ({ data, pageContext }) => {\n  const post = data.markdownRemark;\n  const { previous, next } = pageContext;\n\n  return (\n    <>\n      <SEO siteTitle={post.frontmatter.title} />\n      <PostMainStyle>\n        <BlogNavbar />\n        <PostHeader>{post.frontmatter.title}</PostHeader>\n        <small style={{ padding: \"5px\", display: \"block\" }}>\n          {post.frontmatter.date}\n        </small>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr />\n        <BlogBio />\n        <PostNavigation>\n          <li>\n            {previous && (\n              <Link to={`/blog${previous.fields.slug}`} rel=\"prev\">\n                â {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={`/blog${next.fields.slug}`} rel=\"next\">\n                {next.frontmatter.title} â\n              </Link>\n            )}\n          </li>\n        </PostNavigation>\n        <BlogFooter />\n      </PostMainStyle>\n    </>\n  );\n};\n\nexport default BlogPostTemplate;\n\nBlogPostTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.object.isRequired\n};\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport config from \"../../config/website\";\r\n\r\nconst SEO = ({ siteTitle }) => {\r\n  const data = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n          buildTime(formatString: \"YYYY-MM-DD\")\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  const title = siteTitle;\r\n  const description = config.siteDescription;\r\n\r\n  const realPrefix = config.pathPrefix === \"/\" ? \"\" : config.pathPrefix;\r\n  const homeURL = `${config.siteUrl}${realPrefix}`;\r\n  const image = `${homeURL}${config.siteLogo}`;\r\n\r\n  // schema.org in JSONLD format\r\n  // https://developers.google.com/search/docs/guides/intro-structured-data\r\n  // You can fill out the 'author', 'creator' with more data or another type (e.g. 'Organization')\r\n\r\n  const schemaOrgWebPage = {\r\n    \"@context\": \"http://schema.org\",\r\n    \"@type\": \"WebPage\",\r\n    url: homeURL,\r\n    headline: config.siteHeadline,\r\n    inLanguage: \"en\",\r\n    mainEntityOfPage: homeURL,\r\n    description: config.siteDescription,\r\n    name: config.siteTitle,\r\n    author: {\r\n      \"@type\": \"Person\",\r\n      name: config.author\r\n    },\r\n    copyrightHolder: {\r\n      \"@type\": \"Person\",\r\n      name: config.author\r\n    },\r\n    copyrightYear: \"2019\",\r\n    creator: {\r\n      \"@type\": \"Person\",\r\n      name: config.author\r\n    },\r\n    publisher: {\r\n      \"@type\": \"Person\",\r\n      name: config.author\r\n    },\r\n    datePublished: \"2019-01-17\",\r\n    dateModified: data.site.buildTime,\r\n    image: {\r\n      \"@type\": \"ImageObject\",\r\n      url: image\r\n    }\r\n  };\r\n\r\n  // Initial breadcrumb list\r\n\r\n  const itemListElement = [\r\n    {\r\n      \"@type\": \"ListItem\",\r\n      item: {\r\n        \"@id\": homeURL,\r\n        name: \"Homepage\"\r\n      },\r\n      position: 1\r\n    }\r\n  ];\r\n\r\n  const breadcrumb = {\r\n    \"@context\": \"http://schema.org\",\r\n    \"@type\": \"BreadcrumbList\",\r\n    description: \"Breadcrumbs list\",\r\n    name: \"Breadcrumbs\",\r\n    itemListElement\r\n  };\r\n\r\n  return (\r\n    <Helmet>\r\n      <html lang={config.siteLanguage} />\r\n      <title>{title}</title>\r\n      <link rel=\"apple-touch-icon\" href=\"/favicons/apple-touch-icon.png\" />\r\n      <link\r\n        rel=\"icon\"\r\n        type=\"image/png\"\r\n        sizes=\"32x32\"\r\n        href=\"/favicons/favicon-32x32.png\"\r\n      />\r\n      <link\r\n        rel=\"icon\"\r\n        type=\"image/png\"\r\n        sizes=\"16x16\"\r\n        href=\"/favicons/favicon-16x16.png\"\r\n      />\r\n      <meta name=\"gatsby-starter\" content=\"Gatsby Starter Portfolio Cara\" />\r\n      <link rel=\"shortcut icon\" href=\"favicon.ico\" />\r\n      <meta name=\"msapplication-TileColor\" content={config.backgroundColor} />\r\n      <meta name=\"msapplication-config\" content=\"browserconfig.xml\" />\r\n      <meta name=\"description\" content={description} />\r\n      <meta\r\n        name=\"keywords\"\r\n        content=\"web-development, blog, personal-site, portfolio\"\r\n      />\r\n      <meta name=\"image\" content={image} />\r\n      <meta property=\"og:locale\" content={config.ogLanguage} />\r\n      <meta property=\"og:site_name\" content={config.ogSiteName} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={image} />\r\n      <meta property=\"og:image:alt\" content={description} />\r\n      {config.siteFBAppID && (\r\n        <meta property=\"fb:app_id\" content={config.siteFBAppID} />\r\n      )}\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={config.userTwitter ? config.userTwitter : \"\"}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={description} />\r\n      <meta name=\"twitter:image\" content={image} />\r\n      <meta name=\"twitter:image:alt\" content={description} />\r\n      <script type=\"application/ld+json\">\r\n        {JSON.stringify(schemaOrgWebPage)}\r\n      </script>\r\n      <script type=\"application/ld+json\">{JSON.stringify(breadcrumb)}</script>\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nexport default SEO;\r\n\r\nSEO.propTypes = {\r\n  siteTitle: PropTypes.string.isRequired\r\n};\r\n","module.exports = {\n  pathPrefix: \"/\", // Prefix for all links. If you deploy your site to example.com/portfolio your pathPrefix should be \"/portfolio\"\n\n  siteTitle: \"Navin | Personal Blog\", // Navigation and Site Title\n  siteTitleAlt: \"Navin Navi\", // Alternative Site title for SEO\n  siteTitleShort: \"Navin Navi\", // short_name for manifest\n  siteHeadline: \"Creating marvelous art & blazginly fast websites with Gatsby\", // Headline for schema.org JSONLD\n  siteUrl: \"https://navin-navi.github.io\", // Domain of your site. No trailing slash!\n  siteLanguage: \"en\", // Language Tag on <html> element\n  siteLogo: \"/logo.png\", // Used for SEO and manifest\n  siteDescription: \"Personal Web Development related Blog with Parallax effect\",\n  author: \"Navin\", // Author for schema.org JSONLD\n\n  siteFBAppID: \"576603726168994\", // Facebook App ID - Optional\n  userTwitter: \"@navin_navi19\", // Twitter Username\n  ogSiteName: \"navinnavi19\", // Facebook Site Name\n  ogLanguage: \"en_US\", // Facebook Language\n  googleAnalyticsID: \"UA-142123747-1\",\n\n  // Manifest and Progress color\n  themeColor: \"#ec407a\",\n  backgroundColor: \"#ec407a\"\n};\n","module.exports = __webpack_public_path__ + \"static/avatar-3a42cea0224860ee4d5ed8f2011bab57.jpg\";","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport tw from \"tailwind.macro\";\r\n\r\n// Logo\r\nimport logo from \"../../static/logo.png\";\r\n\r\nconst Navbar = tw.div`flex flex-row justify-between items-center mb-10`;\r\nconst NavbarHeading = tw.h1``;\r\n\r\nconst NavbarLogo = tw.img`w-24 m-auto`;\r\n\r\nconst BlogNavbar = () => (\r\n  <>\r\n    <Navbar>\r\n      <Link to=\"/blog\" style={{ borderBottom: \"unset\" }}>\r\n        <NavbarHeading>BLOG</NavbarHeading>\r\n      </Link>\r\n\r\n      <Link to=\"/\" style={{ borderBottom: \"unset\" }}>\r\n        <NavbarLogo src={logo} alt=\"Logo\" />\r\n      </Link>\r\n    </Navbar>\r\n  </>\r\n);\r\n\r\nexport default BlogNavbar;\r\n","module.exports = __webpack_public_path__ + \"static/logo-c247666476957f46ea5f6c648a597af4.png\";","import React from \"react\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport tw from \"tailwind.macro\";\r\n\r\nimport avatar from \"../images/avatar.jpg\";\r\n\r\nconst BioContainer = tw.div`flex flex-row mb-5`;\r\n\r\nconst Avatar = tw.img`rounded-full w-16  h-16 shadow-lg my-1 mr-2 md:mr-5`;\r\n\r\nconst BioText = tw.div`flex flex-col text-xs sm:text-sm md:text-base m-2`;\r\n\r\nconst Text = tw.div`mb-3 md:mb-4`;\r\n\r\nconst BlogBio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n  const { social, author } = data.site.siteMetadata;\r\n  return (\r\n    <BioContainer>\r\n      <Avatar src={avatar} alt={author} />\r\n      <BioText>\r\n        <Text>\r\n          Written by <strong>{author}</strong>. I write blogs and log my daily\r\n          activities here.\r\n        </Text>\r\n        <Text>\r\n          <a href={`https://twitter.com/${social.twitter}`}>\r\n            You can follow me on Twitter\r\n          </a>\r\n        </Text>\r\n      </BioText>\r\n    </BioContainer>\r\n  );\r\n};\r\nexport default BlogBio;\r\n"],"sourceRoot":""}