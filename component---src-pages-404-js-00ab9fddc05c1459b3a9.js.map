{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./config/website.js","webpack:///./src/styles/global.jsx","webpack:///./src/components/SEO.jsx","webpack:///./src/components/Layout.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","_ref","location","a","createElement","Fragment","siteTitle","to","m","module","exports","require","default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","pathPrefix","siteTitleAlt","siteTitleShort","siteHeadline","siteUrl","siteLanguage","siteLogo","siteDescription","author","siteFBAppID","userTwitter","ogSiteName","ogLanguage","googleAnalyticsID","themeColor","backgroundColor","GlobalStyle","createGlobalStyle","_templateObject","SEO","data","_1385866240","title","site","siteMetadata","description","config","realPrefix","homeURL","image","schemaOrgWebPage","@context","@type","url","headline","inLanguage","mainEntityOfPage","name","copyrightHolder","copyrightYear","creator","publisher","datePublished","dateModified","buildTime","breadcrumb","itemListElement","item","@id","position","react_default","Helmet_default","lang","rel","href","type","sizes","content","property","JSON","stringify","Layout","components_SEO","global"],"mappings":"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","file":"component---src-pages-404-js-00ab9fddc05c1459b3a9.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\n\n// Components\nimport Layout from \"../components/Layout\";\n\nconst NotFoundPage = ({ location }) => {\n  // console.log(__PATH_PREFIX__);\n  return (\n    <>\n      <Layout siteTitle=\"404: Not Found\" />\n      <h1>Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      <Link to=\"/\">Go to Home</Link>\n    </>\n  );\n};\n\nexport default NotFoundPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = {\n  pathPrefix: \"/\", // Prefix for all links. If you deploy your site to example.com/portfolio your pathPrefix should be \"/portfolio\"\n\n  siteTitle: \"Navin | Personal Website\", // Navigation and Site Title\n  siteTitleAlt: \"Navin Navi\", // Alternative Site title for SEO\n  siteTitleShort: \"Navin Navi\", // short_name for manifest\n  siteHeadline: \"Creating marvelous art & blazginly fast websites\", // Headline for schema.org JSONLD\n  siteUrl: \"https://navin-navi.github.io\", // Domain of your site. No trailing slash!\n  siteLanguage: \"en\", // Language Tag on <html> element\n  siteLogo: \"/logo.png\", // Used for SEO and manifest\n  siteDescription: \"Playful & Colorful personal website with Parallax effect\",\n  author: \"Navin\", // Author for schema.org JSONLD\n\n  siteFBAppID: \"576603726168994\", // Facebook App ID - Optional\n  userTwitter: \"@navin_navi19\", // Twitter Username\n  ogSiteName: \"navinnavi19\", // Facebook Site Name\n  ogLanguage: \"en_US\", // Facebook Language\n  googleAnalyticsID: \"UA-142123747-1\",\n\n  // Manifest and Progress color\n  themeColor: \"#ff1744\",\n  backgroundColor: \"#2C5282\"\n};\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n  html {\n    text-rendering: optimizeLegibility;\n    overflow-x: hidden;\n    box-sizing: border-box;\n    -ms-overflow-style: scrollbar;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    background-color: #161719;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  html, body {\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    color: white;\n  }\n  a {\n    color: #ff1744;\n    text-decoration: none;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql, useStaticQuery } from \"gatsby\";\r\nimport config from \"../../config/website\";\r\n\r\nconst SEO = ({ siteTitle }) => {\r\n  const data = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n          buildTime(formatString: \"YYYY-MM-DD\")\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  const title = `${siteTitle} | ${data.site.siteMetadata.title}`;\r\n  const description = config.siteDescription;\r\n\r\n  const realPrefix = config.pathPrefix === \"/\" ? \"\" : config.pathPrefix;\r\n  const homeURL = `${config.siteUrl}${realPrefix}`;\r\n  const image = `${homeURL}${config.siteLogo}`;\r\n\r\n  // schema.org in JSONLD format\r\n  // https://developers.google.com/search/docs/guides/intro-structured-data\r\n  // You can fill out the 'author', 'creator' with more data or another type (e.g. 'Organization')\r\n\r\n  const schemaOrgWebPage = {\r\n    \"@context\": \"http://schema.org\",\r\n    \"@type\": \"WebPage\",\r\n    url: homeURL,\r\n    headline: config.siteHeadline,\r\n    inLanguage: \"en\",\r\n    mainEntityOfPage: homeURL,\r\n    description: config.siteDescription,\r\n    name: config.siteTitle,\r\n    author: {\r\n      \"@type\": \"Person\",\r\n      name: config.author\r\n    },\r\n    copyrightHolder: {\r\n      \"@type\": \"Person\",\r\n      name: config.author\r\n    },\r\n    copyrightYear: \"2019\",\r\n    creator: {\r\n      \"@type\": \"Person\",\r\n      name: config.author\r\n    },\r\n    publisher: {\r\n      \"@type\": \"Person\",\r\n      name: config.author\r\n    },\r\n    datePublished: \"2019-01-17\",\r\n    dateModified: data.site.buildTime,\r\n    image: {\r\n      \"@type\": \"ImageObject\",\r\n      url: image\r\n    }\r\n  };\r\n\r\n  // Initial breadcrumb list\r\n\r\n  const itemListElement = [\r\n    {\r\n      \"@type\": \"ListItem\",\r\n      item: {\r\n        \"@id\": homeURL,\r\n        name: \"Homepage\"\r\n      },\r\n      position: 1\r\n    }\r\n  ];\r\n\r\n  const breadcrumb = {\r\n    \"@context\": \"http://schema.org\",\r\n    \"@type\": \"BreadcrumbList\",\r\n    description: \"Breadcrumbs list\",\r\n    name: \"Breadcrumbs\",\r\n    itemListElement\r\n  };\r\n\r\n  return (\r\n    <Helmet>\r\n      <html lang={config.siteLanguage} />\r\n      <title>{title}</title>\r\n      <link rel=\"apple-touch-icon\" href=\"/favicons/apple-touch-icon.png\" />\r\n      <link\r\n        rel=\"icon\"\r\n        type=\"image/png\"\r\n        sizes=\"32x32\"\r\n        href=\"/favicons/favicon-32x32.png\"\r\n      />\r\n      <link\r\n        rel=\"icon\"\r\n        type=\"image/png\"\r\n        sizes=\"16x16\"\r\n        href=\"/favicons/favicon-16x16.png\"\r\n      />\r\n      <meta name=\"gatsby-starter\" content=\"Gatsby Starter Portfolio Cara\" />\r\n      <link rel=\"shortcut icon\" href=\"favicon.ico\" />\r\n      <meta name=\"msapplication-TileColor\" content={config.backgroundColor} />\r\n      <meta name=\"msapplication-config\" content=\"browserconfig.xml\" />\r\n      <meta name=\"description\" content={description} />\r\n      <meta name=\"image\" content={image} />\r\n      <meta property=\"og:locale\" content={config.ogLanguage} />\r\n      <meta property=\"og:site_name\" content={config.ogSiteName} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={image} />\r\n      <meta property=\"og:image:alt\" content={description} />\r\n      {config.siteFBAppID && (\r\n        <meta property=\"fb:app_id\" content={config.siteFBAppID} />\r\n      )}\r\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={config.userTwitter ? config.userTwitter : \"\"}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={description} />\r\n      <meta name=\"twitter:image\" content={image} />\r\n      <meta name=\"twitter:image:alt\" content={description} />\r\n      <script type=\"application/ld+json\">\r\n        {JSON.stringify(schemaOrgWebPage)}\r\n      </script>\r\n      <script type=\"application/ld+json\">{JSON.stringify(breadcrumb)}</script>\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nexport default SEO;\r\n\r\nSEO.propTypes = {\r\n  siteTitle: PropTypes.string.isRequired\r\n};\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport GlobalStyle from \"../styles/global\";\nimport SEO from \"./SEO\";\nimport \"typeface-cantata-one\";\nimport \"typeface-open-sans\";\n\nconst Layout = ({ siteTitle }) => (\n  <>\n    <SEO siteTitle={siteTitle} />\n    <GlobalStyle />\n  </>\n);\n\nexport default Layout;\n\nLayout.propTypes = {\n  siteTitle: PropTypes.string.isRequired\n};\n"],"sourceRoot":""}